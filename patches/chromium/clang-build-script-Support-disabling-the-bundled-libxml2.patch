From 859a6f0832938e6f95572ad3e23eac8a82e0dbf2 Mon Sep 17 00:00:00 2001
From: Ryan Gonzalez <rymg19@gmail.com>
Date: Tue, 1 Mar 2022 19:29:12 -0600
Subject: [PATCH] clang build script: Support disabling the bundled libxml2

In the case of toolchain builds that won't be using the cross
compilers, this isn't needed, and it can be a problem when
attempting to build a toolchain without network access.
---
 tools/clang/scripts/build.py | 26 ++++++++++++++++++--------
 1 file changed, 18 insertions(+), 8 deletions(-)

diff --git a/tools/clang/scripts/build.py b/tools/clang/scripts/build.py
index a4c2cee7b9e94..442505de46d6d 100755
--- a/tools/clang/scripts/build.py
+++ b/tools/clang/scripts/build.py
@@ -737,6 +737,8 @@ def main():
       '\'default\', will download an official model which was '
       'trained for Chrome on Android',
       default='default' if sys.platform.startswith('linux') else '')
+  parser.add_argument('--use-system-libxml', action='store_true',
+                      help='use the system libxml2 (unsupported on Windows)')
   parser.add_argument('--with-android', type=gn_arg, nargs='?', const=True,
                       help='build the Android ASan runtime (linux only)',
                       default=sys.platform.startswith('linux'))
@@ -803,6 +805,10 @@ def main():
     print('--with-ml-inliner-model only supports linux hosts')
     return 1
 
+  if args.use_system_libxml and sys.platform == 'win32':
+    print('--use-system-xml is not valid on Windows')
+    return 1
+
   # Don't buffer stdout, so that print statements are immediately flushed.
   # LLVM tests print output without newlines, so with buffering they won't be
   # immediately printed.
@@ -978,14 +984,18 @@ def main():
     base_cmake_args.append('-DLLVM_WINSYSROOT="%s"' %
                            os.path.dirname(os.path.dirname(GetWinSDKDir())))
 
-  # Statically link libxml2 to make lld-link not require mt.exe on Windows,
-  # and to make sure lld-link output on other platforms is identical to
-  # lld-link on Windows (for cross-builds).
-  with timer.time('libxml2 build'):
-    libxml_cmake_args, libxml_cflags = BuildLibXml2()
-  base_cmake_args += libxml_cmake_args
-  cflags += libxml_cflags
-  cxxflags += libxml_cflags
+  if args.use_system_libxml:
+    # libxml2 is required by the Win manifest merging tool used in cross-builds.
+    base_cmake_args.append('-DLLVM_ENABLE_LIBXML2=FORCE_ON')
+  else:
+    # Statically link libxml2 to make lld-link not require mt.exe on Windows,
+    # and to make sure lld-link output on other platforms is identical to
+    # lld-link on Windows (for cross-builds).
+    with timer.time('libxml2 build'):
+      libxml_cmake_args, libxml_cflags = BuildLibXml2()
+    base_cmake_args += libxml_cmake_args
+    cflags += libxml_cflags
+    cxxflags += libxml_cflags
 
   if args.with_zstd:
     # Statically link zstd to make lld support zstd compression for debug info.
-- 
2.49.0

