From 94569105052ef28373c7929f20bf27da4fa1a3bd Mon Sep 17 00:00:00 2001
From: Ryan Gonzalez <rymg19@gmail.com>
Date: Wed, 11 Nov 2020 16:54:18 -0600
Subject: [PATCH 16/21] [webusb] Properly handle lack of platform support

This avoids crashes and infinite device service startup loops when the
platform does not have a USB service, which can occur on builds without
udev.
---
 chrome/browser/usb/web_usb_detector.cc        |  1 +
 .../device/usb/mojo/device_manager_impl.cc    | 27 +++++++++++++------
 2 files changed, 20 insertions(+), 8 deletions(-)

diff --git a/chrome/browser/usb/web_usb_detector.cc b/chrome/browser/usb/web_usb_detector.cc
index 6e28665b92112..6f6f432fbe478 100644
--- a/chrome/browser/usb/web_usb_detector.cc
+++ b/chrome/browser/usb/web_usb_detector.cc
@@ -275,6 +275,7 @@ void WebUsbDetector::OnDeviceManagerConnectionError() {
   client_receiver_.reset();
 
   // Try to reconnect the device manager.
+  LOG(INFO) << "Restarting USB device manager after connection error";
   Initialize();
 }
 
diff --git a/services/device/usb/mojo/device_manager_impl.cc b/services/device/usb/mojo/device_manager_impl.cc
index 6415ecdb6e2ab..35ecdc35278cf 100644
--- a/services/device/usb/mojo/device_manager_impl.cc
+++ b/services/device/usb/mojo/device_manager_impl.cc
@@ -46,23 +46,31 @@ DeviceManagerImpl::~DeviceManagerImpl() = default;
 
 void DeviceManagerImpl::AddReceiver(
     mojo::PendingReceiver<mojom::UsbDeviceManager> receiver) {
-  if (usb_service_)
-    receivers_.Add(this, std::move(receiver));
+  receivers_.Add(this, std::move(receiver));
 }
 
 void DeviceManagerImpl::EnumerateDevicesAndSetClient(
     mojo::PendingAssociatedRemote<mojom::UsbDeviceManagerClient> client,
     EnumerateDevicesAndSetClientCallback callback) {
-  usb_service_->GetDevices(base::BindOnce(
-      &DeviceManagerImpl::OnGetDevices, weak_factory_.GetWeakPtr(),
-      /*options=*/nullptr, std::move(client), std::move(callback)));
+  if (usb_service_) {
+    usb_service_->GetDevices(base::BindOnce(
+        &DeviceManagerImpl::OnGetDevices, weak_factory_.GetWeakPtr(),
+        /*options=*/nullptr, std::move(client), std::move(callback)));
+  } else {
+    OnGetDevices(nullptr, std::move(client), std::move(callback), {});
+  }
 }
 
 void DeviceManagerImpl::GetDevices(mojom::UsbEnumerationOptionsPtr options,
                                    GetDevicesCallback callback) {
-  usb_service_->GetDevices(base::BindOnce(
-      &DeviceManagerImpl::OnGetDevices, weak_factory_.GetWeakPtr(),
-      std::move(options), mojo::NullAssociatedRemote(), std::move(callback)));
+  if (usb_service_) {
+    usb_service_->GetDevices(base::BindOnce(
+        &DeviceManagerImpl::OnGetDevices, weak_factory_.GetWeakPtr(),
+        std::move(options), mojo::NullAssociatedRemote(), std::move(callback)));
+  } else {
+    OnGetDevices(std::move(options), mojo::NullAssociatedRemote(),
+                 std::move(callback), {});
+  }
 }
 
 void DeviceManagerImpl::GetDevice(
@@ -223,6 +231,9 @@ void DeviceManagerImpl::GetDeviceInternal(
     mojo::PendingReceiver<mojom::UsbDevice> device_receiver,
     mojo::PendingRemote<mojom::UsbDeviceClient> device_client,
     bool allow_security_key_requests) {
+  if (!usb_service_)
+    return;
+
   scoped_refptr<UsbDevice> device = usb_service_->GetDevice(guid);
   if (!device)
     return;
-- 
2.29.2

